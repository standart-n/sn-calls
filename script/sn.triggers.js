// Generated by CoffeeScript 1.3.3

$(function() {
  var methods;
  methods = {
    init: function() {
      if ($("#controls").html() !== "") {
        $(this).snTriggers('controls');
      }
      if ($("#table").html() !== "") {
        $(this).snTriggers('sort');
        $(this).snTriggers('detail');
      }
      if ($("#pagination").html() !== "") {
        $(this).snTriggers('pagination');
      }
      if ($("#signin").html() !== "") {
        return $(this).snTriggers('signin');
      }
    },
    controls: function() {
      $(this).snTriggers('submit');
      $(this).snTriggers('cb');
      $(this).snTriggers('limit');
      return $(this).snTriggers('filters');
    },
    signin: function() {
      var th;
      th = $(this);
      return $("#fSignin").on("submit", function(e) {
        e.preventDefault();
        return th.snEvents({
          href: '#signin'
        });
      });
    },
    submit: function() {
      var th;
      th = $(this);
      $("#fSubmit").on("submit", function(e) {
        e.preventDefault();
        $("#page").val('1');
        return th.snEvents({
          href: '#submit'
        });
      });
      return $("#submit").on("click", function(e) {
        e.preventDefault();
        $("#page").val('1');
        return th.snEvents({
          href: '#submit'
        });
      });
    },
    limit: function() {
      var sn, th;
      th = $(this);
      sn = $(this).data('sn');
      return $(".limit a").on("click", function(e) {
        e.preventDefault();
        $(this).addClass('active').siblings().removeClass('active');
        $('#limit').val($(this).data('limit'));
        $("#page").val('1');
        return th.snEvents({
          href: '#submit'
        });
      });
    },
    cb: function() {
      var th;
      th = $(this);
      return $(".cb").on("click", function(e) {
        e.preventDefault();
        if ($(this).is(':checked')) {
          $('#' + $(this).data('cb')).val('on');
        } else {
          $('#' + $(this).data('cb')).val('off');
        }
        $("#page").val('1');
        return th.snEvents({
          href: "#submit"
        });
      });
    },
    filters: function() {
      var sn, th;
      th = $(this);
      sn = $(this).data('sn');
      return $(".filters li a").on("click", function(e) {
        e.preventDefault();
        if ($(this).data('value' === 'on')) {
          $('i', this).removeClass('icon-ok').addClass('icon-none');
          $(this).data('value', 'off');
          $('#' + $(this).data('cb')).val('off');
        } else {
          $('i', this).removeClass('icon-none').addClass('icon-ok');
          $(this).data('value', 'on');
          $('#' + $(this).data('cb')).val('on');
        }
        $("#page").val('1');
        return th.snEvents({
          href: "#submit"
        });
      });
    },
    detail: function() {
      var th;
      th = $(this);
      return $("a.tel").on("click", function(e) {
        e.preventDefault();
        $("#dst").val($(this).html());
        $("#src").val($(this).html());
        $("#page").val('1');
        return th.snEvents({
          href: "#submit"
        });
      });
    },
    sort: function() {
      var th;
      th = $(this);
      return $("a.sort").on("click", function(e) {
        e.preventDefault();
        $("#order").val($(this).data('order'));
        $("#grad").val($(this).data('grad'));
        $("#page").val('1');
        return th.snEvents({
          href: "#submit"
        });
      });
    },
    pagination: function() {
      var th;
      th = $(this);
      $("a#prev").on("click", function(e) {
        e.preventDefault();
        $("#page").val(($("#page").val() * 1) - 1);
        return th.snEvents({
          href: "#submit"
        });
      });
      $("a.list").on("click", function(e) {
        e.preventDefault();
        $("#page").val($(this).data("page"));
        return th.snEvents({
          href: "#submit"
        });
      });
      return $("a#next").on("click", function(e) {
        e.preventDefault();
        $("#page").val(($("#page").val() * 1) + 1);
        return th.snEvents({
          href: "#submit"
        });
      });
    }
  };
  return $.fn.snTriggers = function(sn) {
    if (!sn) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      if (typeof sn === 'object' || !sn) {
        return methods.init.apply(this, arguments);
      } else {
        return $.error('Метод ' + sn + ' не существует');
      }
    }
  };
});
